/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FactTypeDialog.java
 *
 * Created on 24-mei-2012, 11:30:36
 */
package equa.factbreakdown.gui;

import javax.swing.JOptionPane;

import equa.meta.objectmodel.FactType;
import equa.util.Naming;
import java.awt.Window;
import java.awt.event.HierarchyEvent;
import java.awt.event.HierarchyListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javafx.embed.swing.SwingFXUtils;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JTextField;
import javax.swing.ListModel;
import javax.swing.SwingUtilities;
import javax.swing.event.AncestorEvent;
import javax.swing.event.AncestorListener;

/**
 *
 * @author Ruud
 */
public class ExpressionTreeRootDialog extends javax.swing.JDialog {

    private static final long serialVersionUID = 1L;
    // fields
    private final TreeController treeController;

    public ExpressionTreeRootDialog(JFrame frame, TreeController treeController, String expression) {
        super(frame, true);
        this.treeController = treeController;
        initComponents();
        setTitle("Please Enter Name of Fact Type");
        taFact.setText(expression);
        taFact.setEditable(false);
        tfTypeName.setFocusable(true);
        tfTypeName.addHierarchyListener(new HierarchyListener() {
            @Override
            public void hierarchyChanged(HierarchyEvent e) {
                final JComponent c = (JComponent) e.getComponent();
                if (c.isShowing() && (e.getChangeFlags() & HierarchyEvent.SHOWING_CHANGED) != 0) {
                    Window toplevel = SwingUtilities.getWindowAncestor(c);
                    toplevel.addWindowFocusListener(new WindowAdapter() {

                        @Override
                        public void windowGainedFocus(WindowEvent e) {
                            guessFactType();
                            c.requestFocus();
                        }
                    });
                }

            }
        });

    }

    private void guessFactType() {
        String expression = taFact.getText();
        ListModel<FactType> model = lsFactTypes.getModel();
        FactType guess = null;
        int sizeGuess = -1;
        int indexGuess = -1;
        for (int i = 0; i < model.getSize(); i++) {
            FactType ft = model.getElementAt(i);

            int sizeConstants = ft.matchTypeExpression(expression);
            if (sizeConstants > sizeGuess) {
                guess = ft;
                sizeGuess = sizeConstants;
                indexGuess = i;
            }

        }
        if (guess != null) {
            tfTypeName.setText(guess.getName());

            lsFactTypes.setSelectedIndex(indexGuess);
            lsFactTypes.ensureIndexIsVisible(indexGuess);
        }

    }

    public String getTypeName() {
        return Naming.withCapital(tfTypeName.getText().trim());
    }

    public boolean isObjectType() {
        return cbObjectType.isSelected();
    }

    public void resetDialog() {
        lsFactTypes.clearSelection();
        tfTypeName.setText("");
        tfTypeName.requestFocusInWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTypeName = new javax.swing.JLabel();
        tfTypeName = new javax.swing.JTextField();
        spFactTypes = new javax.swing.JScrollPane();
        lsFactTypes = new javax.swing.JList();
        btOK = new javax.swing.JButton();
        btReset = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taFact = new javax.swing.JTextArea();
        cbObjectType = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAutoRequestFocus(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lbTypeName.setText("Type name");
        lbTypeName.setName("lbTypeName"); // NOI18N

        tfTypeName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        tfTypeName.setDragEnabled(false);
        tfTypeName.setFocusCycleRoot(true);
        tfTypeName.setName("tfTypeName"); // NOI18N
        tfTypeName.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tfTypeNameAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tfTypeName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTypeNameActionPerformed(evt);
            }
        });
        tfTypeName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfTypeNameKeyReleased(evt);
            }
        });

        spFactTypes.setBorder(javax.swing.BorderFactory.createTitledBorder("Fact types"));
        spFactTypes.setName("spFactTypes"); // NOI18N

        lsFactTypes.setModel(treeController.getObjectModel());
        lsFactTypes.setName("lsFactTypes"); // NOI18N
        lsFactTypes.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lsFactTypesValueChanged(evt);
            }
        });
        spFactTypes.setViewportView(lsFactTypes);

        btOK.setText("OK");
        btOK.setToolTipText("Apply changes and close this dialog.");
        btOK.setName("btOK"); // NOI18N
        btOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOKActionPerformed(evt);
            }
        });

        btReset.setText("Reset");
        btReset.setToolTipText("Reset all values to their defaults.");
        btReset.setName("btReset"); // NOI18N
        btReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btResetActionPerformed(evt);
            }
        });

        btCancel.setText("Cancel");
        btCancel.setToolTipText("Cancel changes and close this dialog.");
        btCancel.setName("btCancel"); // NOI18N
        btCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        taFact.setColumns(20);
        taFact.setLineWrap(true);
        taFact.setRows(5);
        taFact.setWrapStyleWord(true);
        taFact.setName("taFact"); // NOI18N
        jScrollPane1.setViewportView(taFact);

        cbObjectType.setText("Object Type");
        cbObjectType.setName("cbOT"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(btOK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btReset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btCancel))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addComponent(spFactTypes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbObjectType)
                    .addContainerGap())
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                    .addComponent(tfTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lbTypeName)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(cbObjectType)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTypeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbTypeName))
                .addGap(18, 18, 18)
                .addComponent(spFactTypes, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancel)
                    .addComponent(btReset)
                    .addComponent(btOK)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOKActionPerformed
        if (getTypeName().isEmpty()) {
            JOptionPane.showMessageDialog(this, ("Please fill in type name."));
            tfTypeName.requestFocusInWindow();
            return;
        }

        if (!Naming.isIdentifier(this.getTypeName())) {
            JOptionPane.showMessageDialog(getOwner(), "Type name must fullfill the rules "
                + "of an identifier: it must begin with a letter or an underscore (_) and"
                + "may be followed by one or more letters, underscores and/or digits.");
            return;
        }

        FactType ft = treeController.getObjectModel().getFactType(tfTypeName.getText());
        if (ft != null) {
            if (ft.isObjectType() && ft.getFTE() == null) {
                if (ft.getObjectType().isAbstract()) {
                    JOptionPane.showMessageDialog(getOwner(),
                        "chosen objecttype is abstract where a concrete object type is required");
                } else {
                    cbObjectType.setSelected(true);
                    setVisible(false);
                }
            } else {
                cbObjectType.setSelected(false);
                setVisible(false);
            }
        } else {
            setVisible(false);
        }
    }//GEN-LAST:event_btOKActionPerformed

    private void btResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btResetActionPerformed
        resetDialog();
    }//GEN-LAST:event_btResetActionPerformed

    private void btCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelActionPerformed
        btResetActionPerformed(evt);
        setVisible(false);
    }//GEN-LAST:event_btCancelActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        btResetActionPerformed(null);
    }//GEN-LAST:event_formWindowClosing

    private void tfTypeNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTypeNameActionPerformed
        btOKActionPerformed(evt);
    }//GEN-LAST:event_tfTypeNameActionPerformed

    private void tfTypeNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTypeNameKeyReleased

        GuiTools.intellisense(tfTypeName, lsFactTypes);
    }//GEN-LAST:event_tfTypeNameKeyReleased

    private void lsFactTypesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lsFactTypesValueChanged
        FactType value = (FactType) lsFactTypes.getSelectedValue();
        if (value == null) {
            return;
        }
        String typeName = value.getName();
        if (typeName.isEmpty()) {
            return;
        }

        tfTypeName.setText(typeName);
        tfTypeName.requestFocusInWindow();
    }//GEN-LAST:event_lsFactTypesValueChanged

    private void tfTypeNameAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tfTypeNameAncestorAdded
        JComponent component = evt.getComponent();
        ExpressionTreeRootDialog.this.pack();
        component.requestFocusInWindow();
    }//GEN-LAST:event_tfTypeNameAncestorAdded

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btOK;
    private javax.swing.JButton btReset;
    private javax.swing.JCheckBox cbObjectType;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbTypeName;
    private javax.swing.JList lsFactTypes;
    private javax.swing.JScrollPane spFactTypes;
    private javax.swing.JTextArea taFact;
    private javax.swing.JTextField tfTypeName;
    // End of variables declaration//GEN-END:variables
}
