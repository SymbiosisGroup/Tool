/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ParticipantDialog.java
 *
 * Created on 20-mei-2012, 20:15:49
 */
package equa.project.dialog;

import java.awt.Dimension;
import java.util.Iterator;

import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.border.BevelBorder;

import equa.controller.IView;
import equa.controller.ProjectController;
import equa.project.ProjectRole;
import java.awt.Frame;

/**
 *
 * @author teun
 */
public class ParticipantDialog extends javax.swing.JDialog implements IView {

    private static final long serialVersionUID = 1L;
    ProjectController projectController;
    DefaultListModel<ProjectRole> listModel;

    /**
     * Creates new form ParticipantDialog
     */
    public ParticipantDialog(java.awt.Frame parent, boolean modal, ProjectController controller) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(parent);
        listModel = new DefaultListModel<ProjectRole>();
        lstParticipants.setModel(listModel);
        projectController = controller;
        projectController.addView(this);

        fillList();
        getContentPane().setLayout(null);
        lstParticipants.setSelectedIndex(0);
        getContentPane().add(jScrollPane1);
        getContentPane().add(btnAdd);
        getContentPane().add(btnRemove);
        getContentPane().add(btnEdit);

        JLabel lblParticipants = new JLabel("Participants");
        lblParticipants.setBounds(10, 9, 127, 14);
        getContentPane().add(lblParticipants);
    }

    /**
     * Fills the participant list with all the available participant in the
     * project. Will clear the list first.
     */
    private void fillList() {
        listModel.clear();
        for (Iterator<ProjectRole> it = projectController.getProject().getParticipants().projectRoles(); it.hasNext();) {
            ProjectRole participant = it.next();

            listModel.addElement(participant);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane1.setBounds(10, 34, 239, 186);
        lstParticipants = new javax.swing.JList<>();
        lstParticipants.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
        btnAdd = new javax.swing.JButton();
        btnAdd.setBounds(167, 226, 82, 23);
        btnRemove = new javax.swing.JButton();
        btnRemove.setBounds(10, 226, 79, 23);
        btnEdit = new javax.swing.JButton();
        btnEdit.setBounds(95, 226, 66, 23);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage Participants");
        setMinimumSize(new Dimension(274, 292));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        lstParticipants.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstParticipants.setToolTipText("");
        lstParticipants.setName("lstParticipants"); // NOI18N
        jScrollPane1.setViewportView(lstParticipants);

        btnAdd.setText("Add");
        btnAdd.setToolTipText("Add a new participant");
        btnAdd.setName("btnAdd"); // NOI18N
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
            	AddParticipant(null);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.setToolTipText("Remove the selected participant");
        btnRemove.setName("btnRemove"); // NOI18N
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
            	removeParticipant();
            }
        });

        btnEdit.setText("Edit");
        btnEdit.setToolTipText("Save the current changes or save a new participant");
        btnEdit.setName("btnEdit"); // NOI18N
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddParticipant((ProjectRole)lstParticipants.getSelectedValue());
            }
        });

        btnEdit.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    protected void AddParticipant(ProjectRole selectedValue) {
        // TODO AddParticipantDialog openen, als hij null is dan nieuwe toevoegen.
        AddParticipantDialog dialog = new AddParticipantDialog(((Frame)this.getParent()), selectedValue, projectController);
        dialog.setVisible(true);
    }

    protected void removeParticipant() {
        if (lstParticipants.getSelectedValue() != null) { //Make sure a participant is selected in the list.
            ProjectRole participant = (ProjectRole) lstParticipants.getSelectedValue();
            if (participant != null) //If the selected participant is found ask for its removal.
            {
                projectController.getProject().getParticipants().removeProjectRole(participant);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Make sure a participant is selected in the list.");
        }
    }

	// Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnEdit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<ProjectRole> lstParticipants;
    // End of variables declaration//GEN-END:variables

    @Override
    public void refresh() {
        // TODO Auto-generated method stub
        fillList();
    }
}
